properties([
  parameters([
    choice(choices: ['dev', 'hml', 'prd'],description: '', name: 'ENV'),
    string(defaultValue: 'WebApache', description: '', name: 'APP_NAME', trim: false),
    string(defaultValue: '443', description: '', name: 'APP_PORT', trim: false),
    string(defaultValue: 'https://github.com/cloudacademy/static-website-example', description: '', name: 'APP_REPO', trim: false)
  ]),
  disableConcurrentBuilds(),
  buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '1', numToKeepStr: '3'))
])

pipeline {
   agent any
    environment {
        GitBranch = "master"
        EC2_IP = sh(script: 'curl http://169.254.169.254/latest/meta-data/public-ipv4', returnStdout: true)
        TF_BACKEND_S3_KEY="${env.APP_NAME}/${env.ENV}/DeployInfra.tfstate"
    }
    

    
   stages {
       
        stage('Clean Jenkins Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('check Vars') {
            steps {
                sh "echo check first if vars are compliant"
                    
                sh "echo EC2_IP: $EC2_IP"
                sh "echo ENV: $ENV"
                sh "echo APP_NAME: $APP_NAME"
                sh "echo APP_PORT: $APP_PORT"
                sh "echo APP_REPO: $APP_REPO"
            }
        }
        
        stage('checkout git') {
            steps {
           
                sh "pwd"
                git(
                    url: 'https://github.com/RayanAdmin/CICD_TP_Build_AMI-master.git',
                    credentialsId: '84e8174d-3dfe-430f-9f6b-88f0af1e2a5f',
                    branch: "${GitBranch}"
                )
                sh "ls"
                
            }
        }
        
        stage('DestroyInfra') {
            steps {
               
                    dir("DeployInfra") {
                        sh "pwd"
                        sh "ls"

       //                 wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'xterm']) {
                            sh "terraform init \
                            -backend-config='bucket=toolscicd' \
                            -backend-config='region=eu-west-3' \
                            -backend-config='key='${TF_BACKEND_S3_KEY}''"
                            sh "terraform destroy -auto-approve"  
               //         }
                    }
                
            }
        }
        
        
        
    }
}
